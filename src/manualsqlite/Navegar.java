/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manualsqlite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cromerofajar
 */
public class Navegar extends javax.swing.JFrame {
    Connection c;
    /**
     * Creates new form Navegar
     */
    public Navegar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BotonConsulta = new javax.swing.JButton();
        BotonCrearTabla = new javax.swing.JButton();
        BotonModificarDatos = new javax.swing.JButton();
        BotonBorrarDatos = new javax.swing.JButton();
        BotonAñadirDatos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatosParti = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaMVP = new javax.swing.JTable();
        BotonConsultaJugador = new javax.swing.JButton();
        ConsultaAno = new javax.swing.JButton();
        BotonMostrarTabla = new javax.swing.JButton();
        BotonDesconectar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotonConsulta.setText("Consulta finales");
        BotonConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConsultaActionPerformed(evt);
            }
        });

        BotonCrearTabla.setText("Crear Tabla");
        BotonCrearTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearTablaActionPerformed(evt);
            }
        });

        BotonModificarDatos.setText("Modificar Datos");
        BotonModificarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonModificarDatosActionPerformed(evt);
            }
        });

        BotonBorrarDatos.setText("Borrar Datos");
        BotonBorrarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrarDatosActionPerformed(evt);
            }
        });

        BotonAñadirDatos.setText("Añadir datos a la Tabla");
        BotonAñadirDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAñadirDatosActionPerformed(evt);
            }
        });

        jLabel1.setText("Bienvenido");

        jLabel2.setText("Que acción desea realizar?");

        TablaDatosParti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ano", "Finalista1", "Finalista2", "Campeon"
            }
        ));
        TablaDatosParti.setEnabled(false);
        jScrollPane1.setViewportView(TablaDatosParti);

        TablaMVP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ano", "MVP", "Campeon usado"
            }
        ));
        jScrollPane2.setViewportView(TablaMVP);

        BotonConsultaJugador.setText("Consulta jugador");
        BotonConsultaJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConsultaJugadorActionPerformed(evt);
            }
        });

        ConsultaAno.setText("Consulta por ano");
        ConsultaAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaAnoActionPerformed(evt);
            }
        });

        BotonMostrarTabla.setText("Mostar toda la tabla");
        BotonMostrarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostrarTablaActionPerformed(evt);
            }
        });

        BotonDesconectar.setText("Salir");
        BotonDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDesconectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(BotonCrearTabla)
                    .addComponent(BotonAñadirDatos)
                    .addComponent(BotonModificarDatos)
                    .addComponent(BotonBorrarDatos)
                    .addComponent(BotonConsulta)
                    .addComponent(jLabel2)
                    .addComponent(BotonConsultaJugador)
                    .addComponent(ConsultaAno)
                    .addComponent(BotonMostrarTabla)
                    .addComponent(BotonDesconectar))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(BotonCrearTabla)
                        .addGap(18, 18, 18)
                        .addComponent(BotonAñadirDatos)
                        .addGap(18, 18, 18)
                        .addComponent(BotonModificarDatos)
                        .addGap(18, 18, 18)
                        .addComponent(BotonBorrarDatos))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BotonConsulta)
                        .addGap(18, 18, 18)
                        .addComponent(BotonConsultaJugador)
                        .addGap(18, 18, 18)
                        .addComponent(ConsultaAno)
                        .addGap(18, 18, 18)
                        .addComponent(BotonMostrarTabla)
                        .addGap(18, 18, 18)
                        .addComponent(BotonDesconectar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDesconectarActionPerformed
        int confirmar=Integer.parseInt(JOptionPane.showInputDialog(null,"Desea salir\n1 \"Si\"\nCualquier otro numero \"No\""));
        if(confirmar==1){
            System.exit(0);
        }else{
            
        }
    }//GEN-LAST:event_BotonDesconectarActionPerformed

    private void BotonConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConsultaActionPerformed
        /**
         *  nombre: String used to select the table
         *  condicion: String used to add a value to the query
         *  consulta: String used to realise the query
         */
        String nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre de la tabla que desea consultar");
        String condicion=JOptionPane.showInputDialog(null,"Introduzca la condicion de busqueda recuerde que empieza por WHERE en caso de querer consultar todo deje en blanco");
        String consulta="SELECT ano, finalista1,finalista2,campeon FROM \""+nombre+"\" "+condicion;
        ArrayList<Object[]> base=new ArrayList<>();
        TablaDatosParti.setModel(Consultas.blanco());
        TablaMVP.setModel(Consultas.blanco2());
        DefaultTableModel modelo =(DefaultTableModel) TablaDatosParti.getModel();
        base=Consultas.selectFinal(consulta);
        for(Object[] ele:base){
            modelo.addRow(ele);
        }
        TablaDatosParti.setModel(modelo);
    }//GEN-LAST:event_BotonConsultaActionPerformed

    private void BotonCrearTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearTablaActionPerformed
        CrearTablas obx=new CrearTablas();
        obx.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BotonCrearTablaActionPerformed

    private void BotonMostrarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostrarTablaActionPerformed
        ArrayList<Object[]> base=new ArrayList<>();
        ArrayList<Object[]> base2=new ArrayList<>();
        /**
         *  nombre: String used to select the table
         */
        
        String nombre=JOptionPane.showInputDialog(null,"De que tabla desea mostrar los datos");
        TablaDatosParti.setModel(Consultas.blanco());
        TablaMVP.setModel(Consultas.blanco2());
        DefaultTableModel modelo =(DefaultTableModel) TablaDatosParti.getModel();
        DefaultTableModel modelo2 =(DefaultTableModel) TablaMVP.getModel();
        base=Consultas.selectAll(nombre);
        base2=Consultas.selectAll2(nombre);
        for(Object[] ele:base){
            modelo.addRow(ele);
        }
        
        for(Object[] ele:base2){
            modelo2.addRow(ele);
        }
        TablaDatosParti.setModel(modelo);
        TablaMVP.setModel(modelo2);
    }//GEN-LAST:event_BotonMostrarTablaActionPerformed

    private void BotonAñadirDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAñadirDatosActionPerformed
        /*
        * total= cuenta la cantidad de filas insertadas y devuelve un mensaje segun la cantidad
        */int total=0;
        total=Insertar.insert();
        if(total==2){
            JOptionPane.showMessageDialog(null,"Insertados datos, cantidad= "+total);
        }else if (total==1){
            JOptionPane.showMessageDialog(null,"No insertados los datos en la tabla de mejor jugador\n borre el registro introducido de las finales e introduzca nuevamente los datos");
        }else{
            JOptionPane.showMessageDialog(null,"fallo al intentar introducir todos los datos");
        }
    }//GEN-LAST:event_BotonAñadirDatosActionPerformed

    private void BotonModificarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonModificarDatosActionPerformed
        /**
         *  nombre: String used to select the table
         *  ano: int used to implement the value of the query
         */
        String nombre=JOptionPane.showInputDialog(null,"De que tabla desea modificar los datos");
        int ano=Integer.parseInt(JOptionPane.showInputDialog(null,"Introduce el año del torneo"));
        int compro1=Modificar.modificarDatosMV(nombre,ano);
        int compro2=Modificar.modificarDatosParti(nombre,ano);
        if (compro1==1&&compro2==1){
            JOptionPane.showMessageDialog(null,"Datos modificados, total modificados= "+(compro1+compro2));
        }else if (compro1==1&&compro2==0){
            JOptionPane.showMessageDialog(null,"Datos no modificados borre los registros introducidos de finales e introduzca nuevamente los datos");
        }else {
            JOptionPane.showMessageDialog(null,"fallo al intentar modificar los datos porfavor realice nuevamente la accion");
        }
    }//GEN-LAST:event_BotonModificarDatosActionPerformed

    private void BotonBorrarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrarDatosActionPerformed
        /*
        *compro=Cuenta la cantidad de filas borradas
        */
        int compro=BorrarCampo.borrar();
        if (compro==0){
            JOptionPane.showMessageDialog(null, "Datos no borrados error en el año o no existe");
        }else if(compro==1){
            JOptionPane.showMessageDialog(null,"Datos de las finales borrados pero no se logro borrar los de usuario\nPorfavor cree una final falsa con el año a borrar y repita la accion de borrado");
        }else {
            JOptionPane.showMessageDialog(null,"Datos borrados, Total filas= "+compro);
        }
        
    }//GEN-LAST:event_BotonBorrarDatosActionPerformed

    private void BotonConsultaJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConsultaJugadorActionPerformed
        /**
         *  nombre: String used to select the table
         *  condicion: String used to add a value to the query
         *  consulta: String used to realise the query
         */
        
        String nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre de la tabla que desea consultar");
        String condicion=JOptionPane.showInputDialog(null,"Introduzca la condicion de busqueda recuerde que empieza por WHERE en caso de querer consultar todo deje en blanco\nEn caso de querer buscar por campeon ponga usado como campo");
        String consulta="SELECT ano, mvp,usado FROM \""+nombre+"datos\" "+condicion;
        ArrayList<Object[]> base=new ArrayList<>();
        TablaDatosParti.setModel(Consultas.blanco());
        TablaMVP.setModel(Consultas.blanco2());
        DefaultTableModel modelo =(DefaultTableModel) TablaMVP.getModel();
        base=Consultas.selectMVP(consulta);
        for(Object[] ele:base){
            modelo.addRow(ele);
        }
        TablaMVP.setModel(modelo);
    }//GEN-LAST:event_BotonConsultaJugadorActionPerformed

    private void ConsultaAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaAnoActionPerformed
        TablaDatosParti.setModel(Consultas.blanco());
        TablaMVP.setModel(Consultas.blanco2());
        DefaultTableModel modeloMV=(DefaultTableModel) TablaMVP.getModel();
        DefaultTableModel modeloParti=(DefaultTableModel) TablaDatosParti.getModel();
        /**
         *  nombre: String used to select the table
         *  ano: int used to implement the value of the query
         */
        String nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre de la tabla que desea consultar");
        int ano=Integer.parseInt(JOptionPane.showInputDialog(null,"Introduzca el año por el que desea buscar"));
        ArrayList<Object[]>mv=new ArrayList<>();
        ArrayList<Object[]>parti=new ArrayList<>();
        mv=Consultas.selectAnoMV(ano, nombre);
        parti=Consultas.selectAnoParti(ano, nombre);
        for(Object[] ele:mv){
            modeloMV.addRow(ele);
        }
        for(Object[] ele:parti){
            modeloParti.addRow(ele);
        }
        
        TablaDatosParti.setModel(modeloParti);
        TablaMVP.setModel(modeloMV);
    }//GEN-LAST:event_ConsultaAnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Navegar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Navegar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Navegar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Navegar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Navegar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAñadirDatos;
    private javax.swing.JButton BotonBorrarDatos;
    private javax.swing.JButton BotonConsulta;
    private javax.swing.JButton BotonConsultaJugador;
    private javax.swing.JButton BotonCrearTabla;
    private javax.swing.JButton BotonDesconectar;
    private javax.swing.JButton BotonModificarDatos;
    private javax.swing.JButton BotonMostrarTabla;
    private javax.swing.JButton ConsultaAno;
    public javax.swing.JTable TablaDatosParti;
    public javax.swing.JTable TablaMVP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
